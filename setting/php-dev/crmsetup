#!/bin/sh

source /etc/os-release

echo "alias ls='ls --color=auto'" >> ~/.bashrc
source ~/.bashrc || true
rm -f /var/www/sync.done || true

if ! [ -d /var/www/CRM/ ]; then
    git clone https://github.com/ChurchCRM/CRM.git CRM
    chown -R www-data:www-data /var/www/CRM
fi

cp /var/BuildConfig.json /var/www/CRM/BuildConfig.json
chown www-data:www-data /var/www/CRM/BuildConfig.json

if ! [ -f /var/www/CRM/fetch.done ]; then
    cd CRM
    git fetch --all
    if ! [ -z "${GIT_CMD}" ]; then
        echo "git ${GIT_CMD}";
        git $GIT_CMD;
    fi
    chmod +x ./travis-ci/*.sh
    chmod +x ./scripts/*.sh

    if [ "${NAME}" == "Alpine Linux" ]; then
        rm yarn.lock
        npm install --unsafe-perm grunt-cli i18next-extract-gettext github-release-notes detect-libc lightercollective webpack webpack-cli typescript ts-loader --save-dev
        npm install --unsafe-perm
        npm run composer-update
        npm run composer-install
        npm run orm-gen
        npm run update-signatures
    else
        rm package-lock.json
        yarn add grunt-cli i18next-extract-gettext github-release-notes webpack webpack-cli typescript ts-loader -D
        yarn install
        yarn run composer-update
        yarn run composer-install
        yarn run orm-gen
        yarn run update-signatures
    fi
fi

chown -R www-data:www-data /var/www/CRM
touch /var/www/CRM/fetch.done

if ! [ -f /var/www/CRM/src/Include/Config.php ]; then
    cp /var/www/CRM/src/Include/Config.php.example /var/www/CRM/src/Include/Config.php
    chown www-data:www-data /var/www/CRM/src/Include/Config.php
    chmod 777 /var/www/CRM/src/Include/Config.php

    # Import Docker Secrets
    MYSQL_USER=$(cat /run/secrets/crm_secrets | jq -r '.mysql.MYSQL_USER')
    MYSQL_USER_PWD=$(cat /run/secrets/crm_secrets | jq -r '.mysql.MYSQL_USER_PWD')
    MYSQL_USER_DB=$(cat /run/secrets/crm_secrets | jq -r '.mysql.MYSQL_USER_DB')
    if [ $MYSQL_USER_PWD = "changeme" ]; then
        figlet -f colossal "WARNING"
        red=$(tput setaf 1) # Red
        reset=$(tput sgr0)
        echo "${red}*********************************************"
        echo "${red}WARNING!!!"
        echo "${red}YOU DID NOT CHANGE THE MYSQL_USER_PWD IN THE crm_secrets.json FILE!!!"
        echo "${red}This is EXTREMELY insecure. Please go back and change the password to something more secure and re-build your images by running `docker-compose build`"
        echo "${red}*********************************************"
        ${reset}
        echo ""
    fi
    # Create ChurchCRM Config File
    sed -i "s/||DB_SERVER_NAME||/$MYSQL_DB_HOST/g" /var/www/CRM/src/Include/Config.php
    sed -i "s/||DB_SERVER_PORT||/3306/g" /var/www/CRM/src/Include/Config.php
    sed -i "s/||DB_NAME||/$MYSQL_USER_DB/g" /var/www/CRM/src/Include/Config.php
    sed -i "s/||DB_USER||/$MYSQL_USER/g" /var/www/CRM/src/Include/Config.php
    sed -i "s/||DB_PASSWORD||/$MYSQL_USER_PWD/g" /var/www/CRM/src/Include/Config.php
    sed -i "s/||URL||//g" /var/www/CRM/src/Include/Config.php
    sed -i "s/||ROOT_PATH||//g" /var/www/CRM/src/Include/Config.php
fi

touch /var/www/sync.done